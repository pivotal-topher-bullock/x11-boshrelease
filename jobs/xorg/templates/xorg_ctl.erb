#!/bin/bash -e

JOB_DIR=/var/vcap/jobs/xorg
RUN_DIR=/var/vcap/sys/run/xorg
LOG_DIR=/var/vcap/sys/log/xorg
PIDFILE=$RUN_DIR/xorg.pid
DATA_DIR=/var/vcap/data
XORG_CONF_DIR=/etc/X11/

function setup() {
  mkdir -p /var/vcap/sys/log/monit
  exec 1>> /var/vcap/sys/log/monit/xorg.out.log
  exec 2>> /var/vcap/sys/log/monit/xorg.err.log

  apt_install
}

function apt_install() {
  export DEBIAN_FRONTEND=noninteractive

  pushd /apt/cache/
    cp /var/vcap/packages/xserver-xorg/cache/*.deb
  popd

  apt-get install -fy xserver-xorg xserver-xorg-video-dummy xserver-xorg-input-void
}

case $1 in
  start)
    setup

    if [ -f "$PIDFILE" ]; then
      pid=$(head -1 "$PIDFILE")

      if [ -n "$pid" ] && [ -e /proc/$pid ]; then
        echo "xorg is already running (pid: $pid); aborting."
        exit 1
      fi

      echo "Removing stale pidfile..."
      rm "$PIDFILE"
    fi

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    export TMPDIR=/var/vcap/data/tmp
    mkdir -p $TMPDIR

    mkdir -p $XORG_CONF_DIR
    cp $JOB_DIR/conf/xorg.conf $XORG_CONF_DIR

    echo $$ > $PIDFILE
    Xorg -configure -noreset +extension GLX +extension RANDR \
    +extension RENDER -logfile $LOG_DIR/xorg.config.log \
    :<%= p("display") %> 2>&1>>$LOG_DIR/xorg.config.out.log

    Xorg -noreset +extension GLX +extension RANDR \
    +extension RENDER -logfile $LOG_DIR/xorg.log \
    :<%= p("display") %> 2>&1>>$LOG_DIR/xorg.out.log

  ;;
  stop)
    setup
    pid=$(cat $PIDFILE)

    for i in $(seq 30); do
      echo "sending TERM to ${pid}..."
      if kill $pid; then
        sleep 1
      else
        echo "exited"
        exit 0
      fi
    done

    echo "timed out; sending SIGQUIT followed by SIGKILL to ${pid}..."
    if kill -QUIT $pid; then
      sleep 5

      echo "killing ${pid}..."
      kill -9 $pid
    fi

    echo "killed"
  ;;
  *)
  echo "Usage: $0 {start|stop}"

  ;;
esac
